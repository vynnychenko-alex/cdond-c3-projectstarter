---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false
    
    - name: "Save env vars"
      become: true
      shell : |
        cd /home/ubuntu/
          sudo su
          echo ENVIRONMENT=production >> ".env"
          echo NODE_ENV=production >> ".env"
          echo TYPEORM_CONNECTION=postgres >> ".env"
          echo TYPEORM_MIGRATIONS_DIR=./src/migrations >> ".env"
          echo TYPEORM_ENTITIES=./src/modules/domain/**/*.entity.ts >> ".env"
          echo TYPEORM_MIGRATIONS=./src/migrations/*.ts >> ".env"
          echo TYPEORM_HOST=$TYPEORM_HOST >> ".env"
          echo TYPEORM_PORT=$TYPEORM_PORT >> ".env"
          echo TYPEORM_USERNAME=$TYPEORM_USERNAME >> ".env"
          echo TYPEORM_PASSWORD=$TYPEORM_PASSWORD >> ".env"
          echo TYPEORM_DATABASE=$TYPEORM_DATABASE >> ".env"

  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"  
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

  roles:
    - configure-server